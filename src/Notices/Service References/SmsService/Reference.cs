//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NoticeSuite.SmsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmsService.ISmsService")]
    public interface ISmsService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISmsService/SendSms")]
        void SendSms(string to, string body, string twilioAccountSid, string twilioAuthToken, string from);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISmsService/SendSms")]
        System.Threading.Tasks.Task SendSmsAsync(string to, string body, string twilioAccountSid, string twilioAuthToken, string from);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsService/CheckIfRunning", ReplyAction="http://tempuri.org/ISmsService/CheckIfRunningResponse")]
        bool CheckIfRunning();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsService/CheckIfRunning", ReplyAction="http://tempuri.org/ISmsService/CheckIfRunningResponse")]
        System.Threading.Tasks.Task<bool> CheckIfRunningAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISmsServiceChannel : NoticeSuite.SmsService.ISmsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SmsServiceClient : System.ServiceModel.ClientBase<NoticeSuite.SmsService.ISmsService>, NoticeSuite.SmsService.ISmsService {
        
        public SmsServiceClient() {
        }
        
        public SmsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendSms(string to, string body, string twilioAccountSid, string twilioAuthToken, string from) {
            base.Channel.SendSms(to, body, twilioAccountSid, twilioAuthToken, from);
        }
        
        public System.Threading.Tasks.Task SendSmsAsync(string to, string body, string twilioAccountSid, string twilioAuthToken, string from) {
            return base.Channel.SendSmsAsync(to, body, twilioAccountSid, twilioAuthToken, from);
        }
        
        public bool CheckIfRunning() {
            return base.Channel.CheckIfRunning();
        }
        
        public System.Threading.Tasks.Task<bool> CheckIfRunningAsync() {
            return base.Channel.CheckIfRunningAsync();
        }
    }
}
